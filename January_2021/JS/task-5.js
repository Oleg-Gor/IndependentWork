'use strict';


// Задача. Сделайте функцию, которая возвращает куб числа. Число передается параметром. 

/* function cub (violent) {

return Math.pow(violent,2);

};

console.log(cub(2));





Сделайте функцию, которая возвращает сумму двух чисел.

Сделайте функцию, которая отнимает от первого числа второе и делит на третье.

Сделайте функцию, которая принимает параметром число от 1 до 7, а возвращает день недели на русском языке. */


/* var summ = function (){
var a = Math.round(Math.random()*(7-1)+1),
arr = ['pn', 'vt', 'sr', 'cht', 'pt', 'sb', 'vs'];

return arr[a-1];

};

document.write(summ()); */


/* На флаги

Дан массив с числами. Проверьте, что в этом массиве есть число 5. Если есть - выведите 'да', а если нет - выведите 'нет'.

Дано число, например 31. Проверьте, что это число не делится ни на одно другое число кроме себя самого и единицы. 
То есть в нашем случае нужно проверить, что число 31 не делится на все числа от 2 до 30. Если число не делится - выведите 'false', а если делится - выведите 'true'.

Дан массив с числами. Проверьте, есть ли в нем два одинаковых числа подряд. Если есть - выведите 'да', а если нет - выведите 'нет'.
 */


/*  var  arr = [1,2,2,5,4,8,6,6,2,1], count = 0;

for (let i=0; i<arr.length; i++){
if (arr[i] == arr [i+1]) count +=1;

}



if (count > 0)   console.log ('da'); else console.log ('net'); */




/* Сделайте функцию, которая параметрами принимает 2 числа. Если эти числа равны - пусть функция вернет true, а если не равны - false.

Сделайте функцию, которая параметрами принимает 2 числа. Если их сумма больше 10 - пусть функция вернет true, а если нет - false.

Сделайте функцию, которая параметром принимает число и проверяет - отрицательное оно или нет. 
Если отрицательное - пусть функция вернет true, а если нет - false. */

/* 
function equel (a,b){
if (a<0) document.write('true ', a); else document.write('false ', a);

}

let a = Math.round(Math.random()*7-5),
b = Math.round(Math.random()*7)

equel(a); */

/* С помощью цикла for сформируйте строку '123456789' и запишите ее в переменную str.

С помощью цикла for сформируйте строку '987654321' и запишите ее в переменную str.

С помощью цикла for сформируйте строку '-1-2-3-4-5-6-7-8-9-' и запишите ее в переменную str. */


/* Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 20 рядов, а не 5:
x
xx
xxx
xxxx
xxxxx

С помощью двух вложенных циклов нарисуйте следующую пирамидку:
1
22
333
4444
55555
666666
7777777
88888888
999999999

Нарисуйте пирамиду, как показано на рисунке, воспользовавшись циклом for:
xx
xxxx
xxxxxx
xxxxxxxx
xxxxxxxxxx
 */




/* for (let i = 1; i<=5; i++){
    var count = 0, str = '';

for (let j = 1; j<=i; j++ ){
    i = String(i);
str +='xx';
count +=1;


}
console.log(str, count);

} 
 */


/* Заполнение массивов

Заполните массив следующим образом: в первый элемент запишите 'x', во второй 'xx', в третий 'xxx' и так далее.

Заполните массив следующим образом: в первый элемент запишите '1', во второй '22', в третий '333' и так далее.

Сделайте функцию arrayFill, которая будет заполнять массив заданными значениями. 
Первым параметром функция принимает значение, которым заполнять массив, а вторым - сколько элементов должно быть в массиве. 
Пример: arrayFill('x', 5) сделает массив ['x', 'x', 'x', 'x', 'x']. Показать решение.

Дан массив с числами. Узнайте сколько элементов с начала массива надо сложить, чтобы в сумме получилось больше 10-ти. */

/* var arr = [1, 1, 4, 3, 3, 1], summ = 0, count = 0;

function arrayFill(a) {
    //console.log(a);
    for (let i = 0; i <= a.length; i++) {
        summ += a[i];
        //console.log(summ, a[i]);
        if (summ > 10) {console.log (summ); return i + 1;}
    }

} */



// console.log(arrayFill(arr));




/* Переворот массива

Дан массив с числами. Не используя метода reverse переверните его элементы в обратном порядке.
Многомерные массивы

Дан двухмерный массив с числами, например [[1, 2, 3], [4, 5], [6]]. 
Найдите сумму элементов этого массива. Массив, конечно же, может быть произвольным. Показать решение.

Дан трехмерный массив с числами, например [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]. Найдите сумму элементов этого массива. 
Массив, конечно же, может быть произвольным. Показать решение. */

/* var arr = [[1, 2, 3], [4, 5], 6], summ = 0;

function array(a) {

    for (let i = 0; i < a.length; i++) {



        if (a[i].length-1 >= 0) {
            for (let j = 0; j < a[i].length; j++) {
             
                summ += a[i][j];
            }

        } else summ += a[i];
    
    }
    return summ;
}


console.log(array(arr)); */


// Задача. Дан массив с числами. Создайте из него новый массив, где останутся лежать только положительные числа. 
// Создайте для этого вспомогательную функцию isPositive(), которая параметром будет принимать число и возвращать true, 
// если число положительное, и false - если отрицательное. 

/* var arr = [], arr2=[];

for (let i = 0; i < 10; i++) {

    arr[i] = Math.round(Math.random() * 30 - 10);

}
console.log(arr);

function pol (a){
if(a>0) return true; else return false;

}

for (let i = 0; i<=arr.length; i++){

if (pol(arr[i]) == true) arr2.push(arr[i]);


}


console.log(arr2); */



/* Сделайте функцию isNumberInRange, которая параметром принимает число и проверяет, что оно больше нуля и меньше 10. 
Если это так - пусть функция возвращает true, если не так - false.

Дан массив с числами. Запишите в новый массив только те числа, которые больше нуля и меньше 10-ти. 
Для этого используйте вспомогательную функцию isNumberInRange из предыдущей задачи.

Сделайте функцию getDigitsSum (digit - это цифра), которая параметром принимает целое число и возвращает сумму его цифр.

Найдите все года от 1 до 2020, сумма цифр которых равна 13. Для этого используйте вспомогательную функцию getDigitsSum из предыдущей задачи.

Сделайте функцию isEven() (even - это четный), которая параметром принимает целое число и проверяет: четное оно или нет. 
Если четное - пусть функция возвращает true, если нечетное - false.

Дан массив с целыми числами. Создайте из него новый массив, где останутся лежать только четные из этих чисел. 
Для этого используйте вспомогательную функцию isEven из предыдущей задачи.

Сделайте функцию getDivisors, которая параметром принимает число и возвращает массив его делителей (чисел, на которое делится данное число). */


function even () {
let even = Math.round(Math.random()*200+1);
return even;
}

function isEven (even){

if ( !(even%2) ) return true; return false;

}

/* var arr = [];
for (let i = 0; i<=10; i++){

arr.push(even());

}
console.log(arr); */

var arr3=[];

/* for (let key of arr){

if (isEven(key)) arr3.push(key);

} */

/* function getDivisors (even){
for (let i = 0; i<=even; i++){
console.log(even);
if (even%i==0) arr3.push(i);


}
    return arr3;

}



console.log (getDivisors(even())); */




/* Дана строка. Сделайте заглавным первый символ каждого слова этой строки. 
Для этого сделайте вспомогательную функцию ucfirst, которая будет получать строку, делать первый символ этой строки заглавным и возвращать обратно строку с заглавной первой буквой.

Дана строка вида 'var_text_hello'. Сделайте из него текст 'varTextHello'.

Сделайте функцию inArray, которая определяет, есть в массиве элемент с заданным текстом или нет. 
Функция первым параметром должна принимать текст элемента, а вторым - массив, в котором делается поиск. Функция должна возвращать true или false.

Дана строка, например, '123456'. Сделайте из нее '214365'.
 */


var str = 'var_text_hello', arr;

arr = str.split('_');
//console.log(arr[1][0]);
arr[1][0] = arr[1][0].replace(1);
//arr[2][0] = arr[2][0].toUpperCase();


console.log(arr);